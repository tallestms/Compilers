algoritmo declaracao_de_variaveis;

função soma2(x: inteiro, y: inteiro, z: inteiro, w: inteiro, o: inteiro, p: inteiro):inteiro
  a:inteiro;
  c:inteiro;
  b:real;

início
  a := x + y;
  retorne a;
  a := z + w;
  b := 10.10;
  retorne a;
fim

/*
função soma4(x: inteiro, y: inteiro, z: inteiro, w: inteiro) : inteiro
  a:inteiro;
início
  a := x + y + z + w;
  retorne a;
fim

função compara(x: lógico, y: lógico) : lógico
  a:lógico;
início
  a := verdadeiro;
  retorne a;
fim
*/

variáveis

	a : inteiro;
	//b : inteiro;
	//d : inteiro;
	//b : inteiro;
	//c : lógico;
	//a : real;
	//b : inteiro;
	//d : inteiro;
	//b : inteiro;
	//c : lógico;
	//a : real;
	//b : real;
	//c : lógico;
	//z : lógico;
	//c:real;
	//d:inteiro;
	//m:matriz[2][2] de literais;
	//n:matriz[2] de literais;
	//ch : caracter;
	//str : literal;
fim-variáveis

início
	a:=10;
	a:=soma2(1,2,3,4,5,6);

	//m[0][0] := "casa";
	//m[1][1] := 20.2;
	//m[0][1] := 5.05;
	//m[1][0] := 5.04;
	//n := ["casa","cama"];
	//m := {["casa","cama"],["carro","caro"]};
	//str := "teste";
	//str := m[1][1];
	//ch := 'J';
	//m[0][1] := 1030;
	//n[0] := 105;
	//a:=m[1][0];
	//ch := 'a';
	
	//b := soma4(1,2,3,4);

	//a := 2^2;

	//c := verdadeiro;
	//a := soma2(d*a+d*d*a,a+d*a*d*d);
	//z := falso;
	//c := compara(3*a>d,c e (c ou c) ou z);
	//a := 100;
	//a := -a * 2.0;
	//c := verdadeiro e verdadeiro;
	//b := 'a';
	//d := 20;
	
	//c := a > 5.0;
	//m:={[1,2,3,4],[10,20,30,40],[100,200,300,400]};
	//m[0][0] = 20;
	//n := [100,200,300,400];

	//a := m[3][2];
	//a := 100.0e-2 - 2.0;
	//b := -a * (3.0 + (3.5-1.0));
	//a := b;
	//a := 3;
	//a := 10 + - a;
	//m := {[1,2,3,4],[4,3,2,1],[0,0,0,0]};
	//n := [1,2,3,4];
	//a := m[0][0] + m[1][1];

	//a := 10;
	
	//a := 10;
	//d := 20;
	
	

	//a:=10;
	//b:=0;
	//d:=0;
	
	/*
	seleciona (a)
		caso (1):
			b := 10;
			parar;
		caso (2):
			b := 20;
			parar;
		caso (3):
			b:=30;
		caso (4):
			b:=40;
			parar;
		padrão:
			b:=50;
			parar;
	fim-seleciona
	*/
	/*
	/*
	para (a de d até 1 passo -1) faça
		a := a * 10;
	fim-para
	*/
	/*
	se (a = 10 e verdadeiro) então
	  d := 10;
	  se (a = 10 e verdadeiro) então
	    d := 10;
	    a := a + 20;
	  fim-se
	  a := a + 20;
	senão
	  se (a = 10 e verdadeiro) então
	    d := 1000;
	  senão
	    se (a = 10 e verdadeiro) então
	      d := 1000;
	    fim-se
	    a := 20;
	  fim-se
	fim-se
	*/

		
	//b := verdadeiro e falso;
	//c := a>d e a<d e a>((a+d)*d) ou a<(a+d); //isso ta certo???
	
	/*
	faça
		a:=a-1;
		d:=0;
		faça
			b:=b+2;
			d:=d+1;
		;enquanto(d<2);
	;enquanto(a>0);
	*/
	/*
	enquanto (a>2) faça
		d:=0;
		enquanto ( d < 2 ) faça
			b:=b+1;
			d := d+1;			
		fim-enquanto
		a:= a-1;
	fim-enquanto
	*/
	/*
	enquanto (d <> 0) faça
		a := a + d;
	  enquanto ( d <> 0 ) faça
		a := a +d;
	  fim-enquanto
	fim-enquanto
	*/

	/*
	faça
	  a := a + d;
	  faça
	    a := a + d;
	      enquanto ( a <> 0 ) faça
		a := a + 10 + 20;
	      fim-enquanto
	  ;enquanto (a <> 0);
	;enquanto (a <> 0);
	*/
	
	/*
	para (a de d até 1 passo -1) faça
		a := a * 10;
	fim-para
	*/
	//a := 10;
	//d := 5;	
	//b:=0;
	//para (a de d até 1 passo -1) faça
	//	b := b+1;
	//fim-para
	
	//enquanto ( a <> 0 ) faça
	//    a := a + 10 + 20;
	//fim-enquanto
	/*
	// Exemplo de uso de SWITCH
	seleciona (a)
		caso (1):
			a := 1;
			parar;
		caso (2):
			a := 2;
			parar;
		caso (3):
			a := 3;
		caso (4):
			a := 4;
			parar;
		caso (5):
			a := 5;
			parar;
		padrão:
			a := 1;
			a := 2;
			parar;
	fim-seleciona
	*/
	//a := 10 + 20 % 10;
	//c := falso;
	//b := a > d e d <= a;
	//a := 1 + 2 * 3 * 4 + 5;
	//b := 1 > 2 > 3; deveria dar erro.. resolver depois
	//b := 1 + 1 > 3 + 2 * 1;
fim
